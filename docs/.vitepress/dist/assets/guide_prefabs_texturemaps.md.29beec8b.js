import{_ as e,o as t,c as a,O as r}from"./chunks/framework.ccd7224a.js";const y=JSON.parse('{"title":"Texture Maps","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/prefabs/texturemaps.md","filePath":"guide/prefabs/texturemaps.md"}'),o={name:"guide/prefabs/texturemaps.md"},s=r(`<h1 id="texture-maps" tabindex="-1">Texture Maps <a class="header-anchor" href="#texture-maps" aria-label="Permalink to &quot;Texture Maps&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The Texture map and globe prefabs provide a quick way to add geographic maps to your scene by using map layers and mesh textures. This prefab implements the <a href="https://openlayers.org/" target="_blank" rel="noreferrer">OpenLayers API</a> to provide support for map layers and geographic utilities. Additionally, these prefabs provide methods and functions to assist in mapping to Lat Lon positions and map interactions.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//name (required), options (optional), babylon scene (optional) </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//returns instance of textureMap object </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> textureMap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createTextureMap</span><span style="color:#A6ACCD;">(name: String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> options</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> scene</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> BABYLON</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Scene)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//returns instance of textureGlobe object</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> textureGlobe </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createTextureGlobe</span><span style="color:#A6ACCD;">(name: String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> options</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> scene</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> BABYLON</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Scene)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h2><h3 id="texture-map" tabindex="-1">Texture Map <a class="header-anchor" href="#texture-map" aria-label="Permalink to &quot;Texture Map&quot;">​</a></h3><table><thead><tr><th>Property</th><th>Value</th><th>Default</th></tr></thead><tbody><tr><td>layers</td><td>(<a href="https://openlayers.org/en/latest/apidoc/module-ol_layer_Tile-TileLayer.html" target="_blank" rel="noreferrer">Tilelayers[ ]</a>) list of map layer objects from OpenLayers</td><td>[ new TileLayer({ source: new OSM() }) ]</td></tr><tr><td>mapHeight</td><td>(number) the height of the texture in pixels</td><td>2000</td></tr><tr><td>mapWidth</td><td>(number) the width of the texture in pixels</td><td>1000</td></tr><tr><td>meshSize</td><td>(number) the scale of the ground mesh</td><td>50</td></tr><tr><td>view</td><td>(<a href="https://openlayers.org/en/latest/apidoc/module-ol_View-View.html" target="_blank" rel="noreferrer">View</a>) map view object from OpenLayers</td><td>new View({ center: [0, 0], zoom: 1 })</td></tr></tbody></table><h3 id="texture-globe" tabindex="-1">Texture Globe <a class="header-anchor" href="#texture-globe" aria-label="Permalink to &quot;Texture Globe&quot;">​</a></h3><table><thead><tr><th>Property</th><th>Value</th><th>Default</th></tr></thead><tbody><tr><td>layers</td><td>(<a href="https://openlayers.org/en/latest/apidoc/module-ol_layer_Tile-TileLayer.html" target="_blank" rel="noreferrer">Tilelayers[ ]</a>) list of map layer objects from OpenLayers</td><td>[ new TileLayer({ source: new OSM(), extent: [-180, -90, 180, 90] }) ]</td></tr><tr><td>resolution</td><td>(Vector2) the resolutions of the texture in pixels 2:1 ratio recommended</td><td>new Vector2(1000, 500)</td></tr><tr><td>diameter</td><td>(number) the diameter of the sphere mesh</td><td>1</td></tr><tr><td>view</td><td>(<a href="https://openlayers.org/en/latest/apidoc/module-ol_View-View.html" target="_blank" rel="noreferrer">View</a>) map view object from OpenLayers</td><td>new View({projection: &#39;EPSG:4326&#39;, extent[-180, -90, 180, 90], center: [0, 0], zoom: 0})</td></tr></tbody></table><h2 id="methods-and-properties" tabindex="-1">Methods and Properties <a class="header-anchor" href="#methods-and-properties" aria-label="Permalink to &quot;Methods and Properties&quot;">​</a></h2><h3 id="texture-map-1" tabindex="-1">Texture Map <a class="header-anchor" href="#texture-map-1" aria-label="Permalink to &quot;Texture Map&quot;">​</a></h3><table><thead><tr><th>Property / Method</th><th>Description</th></tr></thead><tbody><tr><td>container</td><td>the DOM element holding the map texture canvas</td></tr><tr><td>map</td><td>the open layers <a href="https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html" target="_blank" rel="noreferrer">Map object</a></td></tr><tr><td>texture</td><td>the <a href="https://doc.babylonjs.com/typedoc/classes/BABYLON.GUI.AdvancedDynamicTexture" target="_blank" rel="noreferrer">AdvancedDynamicTexture object</a> used for the map</td></tr><tr><td>context</td><td>the DOM canvas object context</td></tr><tr><td>mesh</td><td>the ground mesh</td></tr><tr><td>scaleLon([lon,lat])</td><td>a function that take a lat lon coordinate as a list [lon, lat] and returns the x positions</td></tr><tr><td>scaleLat([lon,lat])</td><td>a function that take a lat lon coordinate as a list [lon, lat] and returns the y positions</td></tr></tbody></table><h3 id="texture-globe-1" tabindex="-1">Texture Globe <a class="header-anchor" href="#texture-globe-1" aria-label="Permalink to &quot;Texture Globe&quot;">​</a></h3><table><thead><tr><th>Property / Method</th><th>Description</th></tr></thead><tbody><tr><td>container</td><td>the DOM element holding the map texture canvas</td></tr><tr><td>map</td><td>the open layers <a href="https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html" target="_blank" rel="noreferrer">Map object</a></td></tr><tr><td>texture</td><td>the <a href="https://doc.babylonjs.com/typedoc/classes/BABYLON.GUI.AdvancedDynamicTexture" target="_blank" rel="noreferrer">AdvancedDynamicTexture object</a> used for the map</td></tr><tr><td>context</td><td>the DOM canvas object context</td></tr><tr><td>mesh</td><td>the ground mesh</td></tr><tr><td>lonLatToVector3([lon,lat])</td><td>function that take lon lat array [lon, lat] and returns a Vector3(x,y,z) position</td></tr></tbody></table><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><p><a href="https://jpmorganchase.github.io/anu/examples/texture_map.html" target="_blank" rel="noreferrer">TextureMap</a></p><p><a href="https://jpmorganchase.github.io/anu/examples/texture_globe.html" target="_blank" rel="noreferrer">TextureGlobe</a></p>`,18),n=[s];function l(p,d,i,h,c,u){return t(),a("div",null,n)}const b=e(o,[["render",l]]);export{y as __pageData,b as default};
