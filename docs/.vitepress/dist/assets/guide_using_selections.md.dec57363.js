import{_ as s,o as a,c as n,O as e}from"./chunks/framework.eb48dd0f.js";const C=JSON.parse('{"title":"Using Selections","description":"","frontmatter":{},"headers":[],"relativePath":"guide/using_selections.md","filePath":"guide/using_selections.md"}'),l={name:"guide/using_selections.md"},o=e(`<h1 id="using-selections" tabindex="-1">Using Selections <a class="header-anchor" href="#using-selections" aria-label="Permalink to &quot;Using Selections&quot;">​</a></h1><p>Selections are the core of the anu workflow. A <a href="./../api/classes/Selection.html">Selection</a> is a javascript object that is comprised of a list of nodes in the Babylon scene-graph, the Scene object containing those nodes, and several methods for selecting, creating, manipulating, or retrieving values and properties from nodes in the Babylon scene-graph.</p><h2 id="manually-creating-a-selection" tabindex="-1">Manually Creating a Selection <a class="header-anchor" href="#manually-creating-a-selection" aria-label="Permalink to &quot;Manually Creating a Selection&quot;">​</a></h2><p>A selection object can simply be created by declaring a new <a href="./../api/classes/Selection.html">Selection</a> object with a list of nodes to be included in the selection and the scene the nodes were created in. Generally speaking, selections will not be created manually but it could be useful to have direct control over selection creation in particular circumstances. Anu provides several methods for selecting nodes to dynamically create selections from the scene graph which we will go over next. Below is an example of a selection being created manually with the meshes we created.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-zQeVy" id="tab-MLjWUaU" checked="checked"><label for="tab-MLjWUaU">js</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> sphere </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sphere</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> selection </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Selection</span><span style="color:#A6ACCD;">([sphere]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span></code></pre></div></div></div><h2 id="selecting-nodes-from-the-scene-graph" tabindex="-1">Selecting Nodes From the Scene Graph <a class="header-anchor" href="#selecting-nodes-from-the-scene-graph" aria-label="Permalink to &quot;Selecting Nodes From the Scene Graph&quot;">​</a></h2><p>Anu provides several different methods for selecting nodes from the Babylon scene-graph. We can select nodes by name, id, tags, and even by data values. These methods return an instance of <a href="./../api/classes/Selection.html">Selection</a> containing all the nodes we selected and allow us to update the properties of all the nodes in the selection. To start let us add some meshes to our scene-graph to select. Bellow we create a box with the name &quot;box-name&quot;, and a sphere with the ID &quot;sphere-ID&quot;.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-H1IYh" id="tab-l1w380U" checked="checked"><label for="tab-l1w380U">js</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//anu create returns a mesh object we can modify the babylon way</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> box </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span>
<span class="line"><span style="color:#A6ACCD;">box</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">box-name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">box</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">position </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vector3</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> sphere </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sphere</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span>
<span class="line"><span style="color:#A6ACCD;">sphere</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sphere-ID</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">sphere</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">position </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vector3</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span></span></code></pre></div></div></div><iframe id="inlineFrameExample" title="Inline Frame Example" width="100%" height="400" src="/index.html/?example=select">
</iframe><h3 id="select-by-name-and-id" tabindex="-1">Select by Name and ID <a class="header-anchor" href="#select-by-name-and-id" aria-label="Permalink to &quot;Select by Name and ID&quot;">​</a></h3><p>Now let us select each of these meshes and add a material to each. Bellow we create two strandard Babylon materials, red for our box green for our sphere. Next we use <a href="./../api/modules.html#selectname">selectName()</a> to select our box, and <a href="./../api/modules.html#selectid">selectId()</a> to select our box. These each return a selection object including or selected mesh. We can then edit the porperties of these meshes but more on that later. Here we use <a href="./../api/classes/Selection.html#material">selection.material()</a> to set our red and green materials on our meshes.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-d4Hb2" id="tab-f3TOWud" checked="checked"><label for="tab-f3TOWud">js</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> boxMaterial </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">StandardMaterial</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">boxMaterial</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span>
<span class="line"><span style="color:#A6ACCD;">boxMaterial</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">diffuseColor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Color3</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> sphereMaterial </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">StandardMaterial</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sphereMaterial</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span>
<span class="line"><span style="color:#A6ACCD;">sphereMaterial</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">diffuseColor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Color3</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Anu select returns a selection object we can modify the anu way</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> box_selection </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectName</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">box-name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span>
<span class="line"><span style="color:#A6ACCD;">                        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">material</span><span style="color:#A6ACCD;">(boxMaterial)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> sphere_selection </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectId</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sphere-ID</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span>
<span class="line"><span style="color:#A6ACCD;">                        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">material</span><span style="color:#A6ACCD;">(sphereMaterial)</span></span></code></pre></div></div></div><iframe id="inlineFrameExample" title="Inline Frame Example" width="100%" height="400" src="/index.html/?example=select_name_tag">
</iframe><h3 id="select-by-tags" tabindex="-1">Select by Tags <a class="header-anchor" href="#select-by-tags" aria-label="Permalink to &quot;Select by Tags&quot;">​</a></h3><p>Aside from name and ID, Babylon supports adding <a href="https://doc.babylonjs.com/features/featuresDeepDive/tags" target="_blank" rel="noreferrer">tags</a> to meshes. Tags are a really handy way to organize and label meshes to make selecting them logically easier. We can use <a href="./../api/modules.html#selectTag">selectTag()</a> to select nodes by tag. Unlike selecting by name and by id, you can use logic within the selection string. Take this example to select theoretical nodes in a scene graph.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-IdYHx" id="tab-TDo_Uxs" checked="checked"><label for="tab-TDo_Uxs">js</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//selects all nodes with the &quot;box&quot; tag</span></span>
<span class="line"><span style="color:#A6ACCD;">anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectTag</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//selects all nodes with the &quot;box&quot; or &quot;sphere&quot; tag</span></span>
<span class="line"><span style="color:#A6ACCD;">anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectTag</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">box || sphere</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene) </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//selects all nodes with the &quot;box&quot; and &quot;sphere&quot; tag</span></span>
<span class="line"><span style="color:#A6ACCD;">anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectTag</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">box &amp;&amp; sphere</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene) </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//selects all nodes without the &quot;box&quot; tag</span></span>
<span class="line"><span style="color:#A6ACCD;">anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectTag</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">!box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene) </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//selects all nodes without the &quot;box&quot; tag</span></span>
<span class="line"><span style="color:#A6ACCD;">anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectTag</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">!box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene) </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//selects all nodes with the &quot;box&quot; tag but without the &quot;sphere&quot; tag</span></span>
<span class="line"><span style="color:#A6ACCD;">anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectTag</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">box &amp;&amp; !sphere</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span></code></pre></div></div></div><h3 id="select-by-data" tabindex="-1">Select by Data <a class="header-anchor" href="#select-by-data" aria-label="Permalink to &quot;Select by Data&quot;">​</a></h3><p>Anu&#39;s focus is manipulating the scene-graph in a data-driven way. Assuming you are using <a href="./../api/modules.html#bind">bind()</a> to bind data to meshes in the scene-graph you can use <a href="./../api/modules.html#selectdata">selectData()</a> to select nodes with your data&#39;s key/value pairs. Below is an example of selecting nodes binded with the iris data set.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-fPSVa" id="tab-zyAAGPr" checked="checked"><label for="tab-zyAAGPr">js</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//return all the nodes with binded data key &quot;sepal-length&quot; of 1 </span></span>
<span class="line"><span style="color:#A6ACCD;">anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectData</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sepal-length</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span></code></pre></div></div></div><h3 id="multiple-selections" tabindex="-1">Multiple Selections <a class="header-anchor" href="#multiple-selections" aria-label="Permalink to &quot;Multiple Selections&quot;">​</a></h3><p>All selection methods can be used to simultaneously select nodes with different search parameters by passing a list instead of a string.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group--h_tr" id="tab-C10GLjv" checked="checked"><label for="tab-C10GLjv">js</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectName</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">box-name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sphere-name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span>
<span class="line"><span style="color:#A6ACCD;">anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectId</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sphere-ID</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">box-ID</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span>
<span class="line"><span style="color:#A6ACCD;">anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectTag</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sphere</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span>
<span class="line"><span style="color:#A6ACCD;">anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectData</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sepal-length</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">petal-length</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span></span></code></pre></div></div></div><h2 id="creating-nodes-with-selections" tabindex="-1">Creating Nodes with Selections <a class="header-anchor" href="#creating-nodes-with-selections" aria-label="Permalink to &quot;Creating Nodes with Selections&quot;">​</a></h2><p>We can also call the <a href="./../api/classes/Selection.html#bind">bind()</a> method from a <a href="./../api/classes/Selection.html">Selection</a> object. This will return a new Selection object with the created nodes. These new nodes will be created as children of the nodes of the original selection. Below, we demonstrate the typical pattern we recommend for creating new nodes with bind. First, create a Selection object consisting of a single TransformNode or otherwise empty mesh. Then use bind to create the desired meshes as children of your TransformNode. This will create a single root for all the newly created meshes which will make it easier to change all the nodes in this subtree later.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-EnBDS" id="tab-NjVEsay" checked="checked"><label for="tab-NjVEsay">js</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//Use a top level bind to create a Selection containing </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//a single TransformNode &#39;cot&#39; aka Center of Transform.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//By default the name and ID of a node will be the mesh type</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//In this case &quot;cot&quot;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> cot </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cot</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Create a sphere for each row of data in the iris data set.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//These spheres will be the childern of our cot node.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Expand the node tree in the inspector to see structure.</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> spheres </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sphere</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">diameter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> iris)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Inspector</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Show</span><span style="color:#A6ACCD;">(scene</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">embedMode</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">showInspector</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div></div></div><iframe id="inlineFrameExample" title="Inline Frame Example" width="100%" height="400" src="/index.html/?example=cot_bind">
</iframe><p>If we call bind on a selection with more than one node it will repeat the method for each node in the selection. Note, this is how the majority of Selection methods function. Here we call bind on our Selection of spheres. This will create a box mesh as a child node of each sphere.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-XqADG" id="tab-1CkEo_l" checked="checked"><label for="tab-1CkEo_l">js</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> cot </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cot</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> spheres </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sphere</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">diameter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> iris)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//We can keep nesting bind on new selections</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//For example, calling bind on the Selection &quot;spheres&quot; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//we can create a box for each sphere</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Expand the node tree in the inspector to see structure.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Each sphere under cot will now be the parent of a box mesh.</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> boxes </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> spheres</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Inspector</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Show</span><span style="color:#A6ACCD;">(scene</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">embedMode</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">showInspector</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div></div></div><iframe id="inlineFrameExample" title="Inline Frame Example" width="100%" height="400" src="/index.html/?example=spheres_bind">
</iframe><h2 id="manipulating-nodes-with-selections" tabindex="-1">Manipulating Nodes with Selections <a class="header-anchor" href="#manipulating-nodes-with-selections" aria-label="Permalink to &quot;Manipulating Nodes with Selections&quot;">​</a></h2><p>We can update these new nodes in two ways. Either directly changing the returned selection of these nodes or by changing the parent selection of the children nodes. In Babylon, when you update the transform properties of a parent node (position, scale, rotation) it changes these properties for all children of that node. First, let us update the transform properties of a selection of boxes. We will use random numbers for position, scale, and rotation. This will change these transform properties for each box in the selection individually. The result is rather artistic.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-61-n0" id="tab-iRwZq-t" checked="checked"><label for="tab-iRwZq-t">js</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> cot </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cot</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> boxes </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> iris)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Call the transform methods exposed by Selection</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//set random transforms for all the box meshes</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//these methods will be executed for each box</span></span>
<span class="line"><span style="color:#A6ACCD;">boxes</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">position</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vector3</span><span style="color:#A6ACCD;">(Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()))</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">scaling</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vector3</span><span style="color:#A6ACCD;">(Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()))</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">rotation</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vector3</span><span style="color:#A6ACCD;">(Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()))</span></span></code></pre></div></div></div><iframe id="inlineFrameExample" title="Inline Frame Example" width="100%" height="400" src="/index.html/?example=boxes_transform">
</iframe><p>In contrast, if we change the transform properties of the parent node instead (in our case the cot selection), the result is much less dramatic. This is because we are changing the transform of only one node, and because the boxes are children of that node they are all being transformed in the same way. This can be useful when we want to move, scale, or rotate a group of meshes at once. For example, if we create a scatter plot and all the meshes are children of a single transform node, we can change the position, scale, and rotation of the whole scatter plot by changing the properties of the root parent node, but more on that later.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-PjS5B" id="tab-2-6dV2l" checked="checked"><label for="tab-2-6dV2l">js</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> cot </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cot</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> boxes </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> iris)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Call the transform methods exposed by Selection</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//set random transforms for cot which will change the transform of all childern</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//these methods will be executed once for the one cot</span></span>
<span class="line"><span style="color:#A6ACCD;">cot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">position</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vector3</span><span style="color:#A6ACCD;">(Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()))</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">scaling</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vector3</span><span style="color:#A6ACCD;">(Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()))</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">rotation</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vector3</span><span style="color:#A6ACCD;">(Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#A6ACCD;">()))</span></span></code></pre></div></div></div><iframe id="inlineFrameExample" title="Inline Frame Example" width="100%" height="400" src="/index.html/?example=cot_transform">
</iframe><h2 id="nested-selections" tabindex="-1">Nested Selections <a class="header-anchor" href="#nested-selections" aria-label="Permalink to &quot;Nested Selections&quot;">​</a></h2><p>Up to this point, we have only selected nodes from the top level of the scene graph. However, we can also call any of the selection methods from an instance of <a href="./../api/classes/Selection.html">Selection</a>. Two things change when we do this. First, we no longer have to pass the scene as a parameter and second only the subgraph of nodes in the Selection object will be searched. For example, below we use the same scene graph as above where each sphere has one child box. We will add one more box with the same name and ID as the nested meshes &quot;box&quot; to the root of the scene graph. When we call a selection method like <a href="./../api/classes/Selection.html#selectName">selectName</a> from our &quot;spheres&quot; selection object, only the children boxes of the spheres will be selected and returned as a new Selection object. This can be seen as we can now manipulate our new Selection of boxes without changing the box mesh we added to the root of the scene.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-XRH_K" id="tab-2oKgmjD" checked="checked"><label for="tab-2oKgmjD">js</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> cot </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cot</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Create a sphere for each row of data in the iris data set.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//These spheres will be the childern of our cot node.</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> spheres </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sphere</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">diameter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> iris)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> boxes </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> spheres</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Create a new box at the root level of the scene-graph</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Move it on the x axis to -2</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> root_box </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">root_box</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">positionX</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Select the boxes who are childern of the nodes in the sphere selection</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//Move these boxes on the x axis to 2</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> boxesSelection </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> spheres</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">selectName</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">boxesSelection</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">positionX</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Inspector</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Show</span><span style="color:#A6ACCD;">(scene</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">embedMode</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">showInspector</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div></div></div><iframe id="inlineFrameExample" title="Inline Frame Example" width="100%" height="400" src="/index.html/?example=select_boxes">
</iframe><h2 id="filtering-selections" tabindex="-1">Filtering Selections <a class="header-anchor" href="#filtering-selections" aria-label="Permalink to &quot;Filtering Selections&quot;">​</a></h2><p>We can filter existing selections by values of properties from nodes in a <a href="./../api/classes/Selection.html">Selection</a> object with the <a href="./../api/classes/Selection.html#filter">filter</a> method.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-AjEGX" id="tab-8yW05Se" checked="checked"><label for="tab-8yW05Se">js</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> cot </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cot</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> scene)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> spheres </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sphere</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">diameter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> iris)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> setosa </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> spheres</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">d</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> d</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">species </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">setosa</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div></div></div><h2 id="manipulating-selection-nodes" tabindex="-1">Manipulating Selection Nodes <a class="header-anchor" href="#manipulating-selection-nodes" aria-label="Permalink to &quot;Manipulating Selection Nodes&quot;">​</a></h2><p>In the previous examples, we have already shown how we can modify the properties of nodes in our <a href="./../api/classes/Selection.html">Selection</a> object. However, this goes way beyond just changing nodes&#39; position and color we can modify any property of nodes in a selection using Anu. In the next section, we will cover this in-depth.</p>`,45),p=[o];function t(c,r,i,D,y,F){return a(),n("div",null,p)}const d=s(l,[["render",t]]);export{C as __pageData,d as default};
