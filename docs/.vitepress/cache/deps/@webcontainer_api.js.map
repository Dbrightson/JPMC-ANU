{
  "version": 3,
  "sources": ["../../../node_modules/@webcontainer/api/dist/util.js", "../../../node_modules/@webcontainer/api/dist/vendor/index.js", "../../../node_modules/@webcontainer/api/dist/index.js"],
  "sourcesContent": ["/**\n * @internal\n */\nexport function formatFileSystemTree(tree) {\n    const newTree = { d: {} };\n    for (const name of Object.keys(tree)) {\n        const entry = tree[name];\n        if ('file' in entry) {\n            const contents = entry.file.contents;\n            const stringContents = typeof contents === 'string' ? contents : binaryString(contents);\n            const binary = typeof contents === 'string' ? {} : { b: true };\n            newTree.d[name] = { f: { c: stringContents, ...binary } };\n            continue;\n        }\n        const newEntry = formatFileSystemTree(entry.directory);\n        newTree.d[name] = newEntry;\n    }\n    return newTree;\n}\nfunction binaryString(bytes) {\n    let result = '';\n    for (const byte of bytes) {\n        result += String.fromCharCode(byte);\n    }\n    return result;\n}\n", "var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// dist/vendor/comlink.js\nvar comlink_exports = {};\n__export(comlink_exports, {\n  createEndpoint: () => createEndpoint,\n  expose: () => expose,\n  proxy: () => proxy,\n  proxyMarker: () => proxyMarker,\n  releaseProxy: () => releaseProxy,\n  transfer: () => transfer,\n  transferHandlers: () => transferHandlers,\n  windowEndpoint: () => windowEndpoint,\n  wrap: () => wrap\n});\n\n// ../../node_modules/comlink/dist/esm/comlink.mjs\nvar proxyMarker = Symbol(\"Comlink.proxy\");\nvar createEndpoint = Symbol(\"Comlink.endpoint\");\nvar releaseProxy = Symbol(\"Comlink.releaseProxy\");\nvar throwMarker = Symbol(\"Comlink.thrown\");\nvar isObject = (val) => typeof val === \"object\" && val !== null || typeof val === \"function\";\nvar proxyTransferHandler = {\n  canHandle: (val) => isObject(val) && val[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  }\n};\nvar throwTransferHandler = {\n  canHandle: (value) => isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack\n        }\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(new Error(serialized.value.message), serialized.value);\n    }\n    throw serialized.value;\n  }\n};\nvar transferHandlers = /* @__PURE__ */ new Map([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler]\n]);\nfunction expose(obj, ep = self) {\n  ep.addEventListener(\"message\", function callback(ev) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = Object.assign({ path: [] }, ev.data);\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj2, prop) => obj2[prop], obj);\n      const rawValue = path.reduce((obj2, prop) => obj2[prop], obj);\n      switch (type) {\n        case 0:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case 1:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case 2:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case 3:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case 4:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case 5:\n          {\n            returnValue = void 0;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue).catch((value) => {\n      return { value, [throwMarker]: 0 };\n    }).then((returnValue2) => {\n      const [wireValue, transferables] = toWireValue(returnValue2);\n      ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n      if (type === 5) {\n        ep.removeEventListener(\"message\", callback);\n        closeEndPoint(ep);\n      }\n    });\n  });\n  if (ep.start) {\n    ep.start();\n  }\n}\nfunction isMessagePort(endpoint) {\n  return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n  if (isMessagePort(endpoint))\n    endpoint.close();\n}\nfunction wrap(ep, target) {\n  return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\nfunction createProxy(ep, path = [], target = function() {\n}) {\n  let isProxyReleased = false;\n  const proxy2 = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: 5,\n            path: path.map((p) => p.toString())\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy2 };\n        }\n        const r = requestResponseMessage(ep, {\n          type: 0,\n          path: path.map((p) => p.toString())\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(ep, {\n        type: 1,\n        path: [...path, prop].map((p) => p.toString()),\n        value\n      }, transferables).then(fromWireValue);\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if (last === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: 4\n        }).then(fromWireValue);\n      }\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: 2,\n        path: path.map((p) => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: 3,\n        path: path.map((p) => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    }\n  });\n  return proxy2;\n}\nfunction myFlat(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nvar transferCache = /* @__PURE__ */ new WeakMap();\nfunction transfer(obj, transfers) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\nfunction proxy(obj) {\n  return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\n  return {\n    postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context)\n  };\n}\nfunction toWireValue(value) {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: 3,\n          name,\n          value: serializedValue\n        },\n        transferables\n      ];\n    }\n  }\n  return [\n    {\n      type: 0,\n      value\n    },\n    transferCache.get(value) || []\n  ];\n}\nfunction fromWireValue(value) {\n  switch (value.type) {\n    case 3:\n      return transferHandlers.get(value.name).deserialize(value.value);\n    case 0:\n      return value.value;\n  }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l);\n      resolve(ev.data);\n    });\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage(Object.assign({ id }, msg), transfers);\n  });\n}\nfunction generateUUID() {\n  return new Array(4).fill(0).map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16)).join(\"-\");\n}\nexport {\n  comlink_exports as Comlink\n};\n", "/**\n * The WebContainer Public API allows you build custom applications on top of an in-browser Node.js runtime.\n *\n * Its main entrypoint is the {@link WebContainer} class.\n *\n * @packageDocumentation\n */\nimport { formatFileSystemTree } from './util.js';\nimport { Comlink } from './vendor/index.js';\nconst DEFAULT_IFRAME_SOURCE = 'https://stackblitz.com/headless';\nlet bootPromise = null;\nlet cachedServerPromise = null;\nlet cachedBootOptions = {};\nconst decoder = new TextDecoder();\nconst encoder = new TextEncoder();\n/**\n * The main export of this library. An instance of `WebContainer` represents a runtime\n * ready to be used.\n */\nexport class WebContainer {\n    _instance;\n    _runtimeInfo;\n    /**\n     * Gives access to the underlying file system.\n     */\n    fs;\n    static _instance = null;\n    _tornDown = false;\n    /** @internal */\n    constructor(\n    /** @internal */\n    _instance, fs, \n    /** @internal */\n    _runtimeInfo) {\n        this._instance = _instance;\n        this._runtimeInfo = _runtimeInfo;\n        this.fs = new FileSystemAPIClient(fs);\n    }\n    async spawn(command, optionsOrArgs, options) {\n        let args = [];\n        if (Array.isArray(optionsOrArgs)) {\n            args = optionsOrArgs;\n        }\n        else {\n            options = optionsOrArgs;\n        }\n        let output = undefined;\n        let stream = new ReadableStream();\n        if (options?.output !== false) {\n            const result = streamWithPush();\n            output = result.push;\n            stream = result.stream;\n        }\n        const wrapped = proxyListener(binaryListener(output));\n        const process = await this._instance.run({\n            command,\n            args,\n            env: options?.env,\n            terminal: options?.terminal,\n        }, undefined, undefined, wrapped);\n        return new WebContainerProcessImpl(process, stream);\n    }\n    on(event, listener) {\n        let tornDown = false;\n        let unsubscribe = () => { };\n        const wrapped = (...args) => {\n            if (tornDown) {\n                return;\n            }\n            listener(...args);\n        };\n        this._instance.on(event, Comlink.proxy(wrapped)).then((_unsubscribe) => {\n            unsubscribe = _unsubscribe;\n            if (tornDown) {\n                unsubscribe();\n            }\n        });\n        return () => {\n            tornDown = true;\n            unsubscribe();\n        };\n    }\n    /**\n     * Mounts a tree of files into the filesystem.\n     *\n     * @param snapshotOrTree - A tree of files, or a binary snapshot. Note that binary payloads will be transferred.\n     * @param options.mountPoint - Specifies a nested path where the tree should be mounted.\n     */\n    mount(snapshotOrTree, options) {\n        const payload = snapshotOrTree instanceof Uint8Array\n            ? snapshotOrTree\n            : encoder.encode(JSON.stringify(formatFileSystemTree(snapshotOrTree)));\n        return this._instance.loadFiles(Comlink.transfer(payload, [payload.buffer]), {\n            mountPoints: options?.mountPoint,\n        });\n    }\n    /**\n     * The default value of the `PATH` environment variable for processes started through {@link spawn}.\n     */\n    get path() {\n        return this._runtimeInfo.path;\n    }\n    /**\n     * The full path to the working directory (see {@link FileSystemAPI}).\n     */\n    get workdir() {\n        return this._runtimeInfo.cwd;\n    }\n    /**\n     * Destroys the WebContainer instance, turning it unusable, and releases its resources. After this,\n     * a new WebContainer instance can be obtained by calling {@link WebContainer.boot | `boot`}.\n     *\n     * All entities derived from this instance (e.g. processes, the file system, etc.) also become unusable\n     * after calling this method.\n     */\n    teardown() {\n        if (this._tornDown) {\n            throw new Error('WebContainer already torn down');\n        }\n        this._tornDown = true;\n        this.fs._teardown();\n        this._instance.teardown();\n        this._instance[Comlink.releaseProxy]();\n        if (WebContainer._instance === this) {\n            WebContainer._instance = null;\n        }\n    }\n    /**\n     * Boots a WebContainer. Only a single instance of WebContainer can be booted concurrently (see {@link WebContainer#teardown | `teardown`}).\n     *\n     * Booting WebContainer is an expensive operation.\n     */\n    static async boot(options = {}) {\n        const { workdirName } = options;\n        if (window.crossOriginIsolated && options.coep === 'none') {\n            console.warn(`A Cross-Origin-Embedder-Policy header is required in cross origin isolated environments.\\nSet the 'coep' option to 'require-corp'.`);\n        }\n        if (workdirName?.includes('/') || workdirName === '..' || workdirName === '.') {\n            throw new Error('workdirName should be a valid folder name');\n        }\n        // try to \"acquire the lock\", i.e. wait for any ongoing boot request to finish\n        while (bootPromise) {\n            await bootPromise;\n        }\n        if (WebContainer._instance) {\n            throw new Error('Only a single WebContainer instance can be booted');\n        }\n        const instancePromise = unsynchronizedBoot(options);\n        // the \"lock\" is a promise for the ongoing boot that never fails\n        bootPromise = instancePromise.catch(() => { });\n        try {\n            const instance = await instancePromise;\n            WebContainer._instance = instance;\n            return instance;\n        }\n        finally {\n            // release the \"lock\"\n            bootPromise = null;\n        }\n    }\n}\nconst DIR_ENTRY_TYPE_FILE = 1;\nconst DIR_ENTRY_TYPE_DIR = 2;\n/**\n * @internal\n */\nclass DirEntImpl {\n    name;\n    _type;\n    constructor(name, _type) {\n        this.name = name;\n        this._type = _type;\n    }\n    isFile() {\n        return this._type === DIR_ENTRY_TYPE_FILE;\n    }\n    isDirectory() {\n        return this._type === DIR_ENTRY_TYPE_DIR;\n    }\n}\nclass FSWatcher {\n    _apiClient;\n    _path;\n    _options;\n    _listener;\n    _wrappedListener;\n    _watcher;\n    _closed = false;\n    constructor(_apiClient, _path, _options, _listener) {\n        this._apiClient = _apiClient;\n        this._path = _path;\n        this._options = _options;\n        this._listener = _listener;\n        this._apiClient._watchers.add(this);\n        this._wrappedListener = (event, filename) => {\n            if (this._listener && !this._closed) {\n                this._listener(event, filename);\n            }\n        };\n        this._apiClient._fs\n            .watch(this._path, this._options, proxyListener(this._wrappedListener))\n            .then((_watcher) => {\n            this._watcher = _watcher;\n            if (this._closed) {\n                this._teardown();\n            }\n        })\n            .catch(console.error);\n    }\n    close() {\n        if (!this._closed) {\n            this._closed = true;\n            this._apiClient._watchers.delete(this);\n            this._teardown();\n        }\n    }\n    /**\n     * @internal\n     */\n    _teardown() {\n        this._watcher?.close().finally(() => {\n            this._watcher?.[Comlink.releaseProxy]();\n        });\n    }\n}\n/**\n * @internal\n */\nclass WebContainerProcessImpl {\n    output;\n    input;\n    exit;\n    _process;\n    constructor(process, output) {\n        this.output = output;\n        this._process = process;\n        this.input = new WritableStream({\n            write: (data) => {\n                // this promise is not supposed to fail anyway\n                this._getProcess()\n                    ?.write(data)\n                    .catch(() => { });\n            },\n        });\n        this.exit = this._onExit();\n    }\n    kill() {\n        this._getProcess()?.kill();\n    }\n    resize(dimensions) {\n        this._getProcess()?.resize(dimensions);\n    }\n    async _onExit() {\n        try {\n            return await this._process.onExit;\n        }\n        finally {\n            this._process?.[Comlink.releaseProxy]();\n            this._process = null;\n        }\n    }\n    _getProcess() {\n        if (this._process == null) {\n            console.warn('This process already exited');\n        }\n        return this._process;\n    }\n}\n/**\n * @internal\n */\nclass FileSystemAPIClient {\n    _fs;\n    _watchers = new Set([]);\n    constructor(fs) {\n        this._fs = fs;\n    }\n    rm(...args) {\n        return this._fs.rm(...args);\n    }\n    async readFile(path, encoding) {\n        return await this._fs.readFile(path, encoding);\n    }\n    async rename(oldPath, newPath) {\n        return await this._fs.rename(oldPath, newPath);\n    }\n    async writeFile(path, data, options) {\n        if (data instanceof Uint8Array) {\n            const buffer = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n            data = Comlink.transfer(new Uint8Array(buffer), [buffer]);\n        }\n        await this._fs.writeFile(path, data, options);\n    }\n    async readdir(path, options) {\n        const result = await this._fs.readdir(path, options);\n        if (isStringArray(result)) {\n            return result;\n        }\n        if (isTypedArrayCollection(result)) {\n            return result;\n        }\n        const entries = result.map((entry) => new DirEntImpl(entry.name, entry['Symbol(type)']));\n        return entries;\n    }\n    async mkdir(path, options) {\n        return await this._fs.mkdir(path, options);\n    }\n    watch(path, options, listener) {\n        if (typeof options === 'function') {\n            listener = options;\n            options = null;\n        }\n        return new FSWatcher(this, path, options, listener);\n    }\n    /**\n     * @internal\n     */\n    _teardown() {\n        this._fs[Comlink.releaseProxy]();\n        for (const watcherWrapper of this._watchers) {\n            watcherWrapper.close();\n        }\n    }\n}\nasync function unsynchronizedBoot(options) {\n    const { serverPromise } = serverFactory(options);\n    const server = await serverPromise;\n    const instance = await server.build({\n        host: window.location.host,\n        version: \"1.1.8\",\n        workdirName: options.workdirName,\n    });\n    const fs = await instance.fs();\n    const runtimeInfo = await instance.runtimeInfo();\n    return new WebContainer(instance, fs, runtimeInfo);\n}\nfunction binaryListener(listener) {\n    if (listener == null) {\n        return undefined;\n    }\n    return (data) => {\n        if (data instanceof Uint8Array) {\n            listener(decoder.decode(data));\n        }\n        else if (data == null) {\n            listener(null);\n        }\n    };\n}\nfunction proxyListener(listener) {\n    if (listener == null) {\n        return undefined;\n    }\n    return Comlink.proxy(listener);\n}\nfunction serverFactory(options) {\n    if (cachedServerPromise != null) {\n        if (options.coep !== cachedBootOptions.coep) {\n            console.warn(`Attempting to boot WebContainer with 'coep: ${options.coep}'`);\n            console.warn(`First boot had 'coep: ${cachedBootOptions.coep}', new settings will not take effect!`);\n        }\n        return { serverPromise: cachedServerPromise };\n    }\n    const iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n    iframe.setAttribute('allow', 'cross-origin-isolated');\n    const url = getIframeUrl();\n    url.searchParams.set('version', \"1.1.8\");\n    if (options.coep) {\n        url.searchParams.set('coep', options.coep);\n    }\n    iframe.src = url.toString();\n    const { origin } = url;\n    cachedBootOptions = { ...options };\n    cachedServerPromise = new Promise((resolve) => {\n        const onMessage = (event) => {\n            if (event.origin !== origin) {\n                return;\n            }\n            const { data } = event;\n            if (data.type === 'init') {\n                resolve(Comlink.wrap(event.ports[0]));\n                return;\n            }\n            if (data.type === 'warning') {\n                console[data.level].call(console, data.message);\n                return;\n            }\n        };\n        window.addEventListener('message', onMessage);\n    });\n    document.body.insertBefore(iframe, null);\n    return { serverPromise: cachedServerPromise };\n}\nfunction isStringArray(list) {\n    return typeof list[0] === 'string';\n}\nfunction isTypedArrayCollection(list) {\n    return list[0] instanceof Uint8Array;\n}\nfunction getIframeUrl() {\n    return new URL(window.WEBCONTAINER_API_IFRAME_URL ?? DEFAULT_IFRAME_SOURCE);\n}\nfunction streamWithPush() {\n    let controller = null;\n    const stream = new ReadableStream({\n        start(controller_) {\n            controller = controller_;\n        },\n    });\n    const push = (item) => {\n        if (item != null) {\n            controller?.enqueue(item);\n        }\n        else {\n            controller?.close();\n            controller = null;\n        }\n    };\n    return { stream, push };\n}\n"],
  "mappings": "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",
  "names": ["_a"]
}
